////////////////////////////////////////////////////////////////////////////////
// Typography Styles
//
// All typography styles are defined here.
//
// DO NOT EDIT THIS FILE! Use _variables.scss to change these styles. For
// additional styles, create partials/components/_typography.scss.
////////////////////////////////////////////////////////////////////////////////

// Typography resets
div,
dl,
dt,
dd,
ul,
ol,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
form,
p,
blockquote,
th,
td {
  margin: 0;
  padding: 0;
}

// Paragraphs
p {
  font-size: inherit;
  line-height: $paragraph-lineheight;
  margin-bottom: $paragraph-margin-bottom;
  text-rendering: $paragraph-text-rendering;
}

// Emphasized text
em,
i {
  font-style: italic;
  line-height: inherit;
}

// Strong text
strong,
b {
  font-weight: $global-weight-bold;
  line-height: inherit;
}

// Small text
small {
  font-size: $small-font-size;
  line-height: inherit;
}

// Headings
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: $header-font-family;
  font-weight: $header-font-weight;
  font-style: $header-font-style;
  color: $header-color;
  text-rendering: $header-text-rendering;
  margin-top: 0;
  margin-bottom: ($header-margin-bottom * $breakpoint-decrease);
  line-height: ($header-lineheight * $breakpoint-decrease);

  @include breakpoint($small) {
    margin-bottom: $header-margin-bottom;
    line-height: $header-lineheight;
  }

  small {
    color: $header-small-font-color;
    line-height: 0;
  }
}

// Heading sizes
h1 {
  font-size: ($header-1-size * $breakpoint-decrease);
}

h2 {
  font-size: ($header-2-size * $breakpoint-decrease);
}

h3 {
  font-size: ($header-3-size * $breakpoint-decrease);
}

h4 {
  font-size: ($header-4-size * $breakpoint-decrease);
}

h5 {
  font-size: ($header-5-size * $breakpoint-decrease);
}

h6 {
  font-size: ($header-6-size * $breakpoint-decrease);
}

@include breakpoint($small) {
  h1 {
    font-size: $header-1-size;
  }

  h2 {
    font-size: $header-2-size;
  }

  h3 {
    font-size: $header-3-size;
  }

  h4 {
    font-size: $header-4-size;
  }

  h5 {
    font-size: $header-5-size;
  }

  h6 {
    font-size: $header-6-size;
  }
}

// Links
a {
  color: $anchor-color;
  text-decoration: $anchor-text-decoration;
  line-height: inherit;
  cursor: pointer;

  &:hover,
  &:focus {
    color: $anchor-color-hover;
    @if $anchor-text-decoration-hover != $anchor-text-decoration {
      text-decoration: $anchor-text-decoration-hover;
    }
  }

  img {
    border: 0;
  }
}

// Horizontal rule
hr {
  max-width: $hr-width;
  height: 0;
  border-top: 0;
  border-bottom: $hr-border;
  margin: $hr-margin;
  clear: both;
}

// Lists
ul,
ol,
dl {
  line-height: $list-lineheight;
  margin-bottom: $list-margin-bottom;
  list-style-position: $list-style-position;
}

// List items
li {
  font-size: inherit;
  margin: 0;
}

// Unordered lists
ul {
  list-style-type: $list-style-type;
  margin-#{$global-left}: $list-side-margin;
}

// Ordered lists
ol {
  list-style-type: decimal;
  margin-#{$global-left}: $list-side-margin;
}

// Nested unordered/ordered lists
ul, ol {
  & & {
    margin-#{$global-left}: $list-nested-side-margin;
    margin-bottom: 0;
    list-style-type: inherit;
  }
}

// Definition lists
dl {
  margin-bottom: $defnlist-margin-bottom;

  dt {
    margin-bottom: $defnlist-term-margin-bottom;
    font-weight: $defnlist-term-weight;
  }
}

// Blockquotes
blockquote {
  margin: 0 0 $paragraph-margin-bottom;
  padding: $blockquote-padding;
  border-#{$global-left}: $blockquote-border;

  &, p {
    line-height: $paragraph-lineheight;
    color: $blockquote-color;
  }
}

// Citations
cite {
  display: block;
  font-size: $cite-font-size;
  color: $cite-color;

  &:before {
    content: '\2014 \0020';
  }
}

// Abbreviations
abbr {
  color: $body-font-color;
  cursor: help;
  border-bottom: $abbr-underline;
}

// Code
code,
pre {
  font-family: $code-font-family;
  font-weight: $code-font-weight;
  color: $code-color;
  background-color: $code-background;
  border: $code-border;
  padding: $code-padding;
}

pre {
  padding: rem-calc(20);
  margin-bottom: rem-calc($global-margin);
}

// Keystrokes
kbd {
  padding: $keystroke-padding;
  margin: 0;
  background-color: $keystroke-background;
  color: $keystroke-color;
  font-family: $keystroke-font;
}

sup,
sub {
  font-size: $xxsmall-font-size;
}

sup {
  vertical-align: super;
}

sub {
  vertical-align: sub;
}