////////////////////////////////////////////////////////////////////////////////
// Base Styles
//
// All base element styles should are defined here.
//
// DO NOT EDIT THIS FILE! Use _variables.scss to change these styles. For
// additional styles, create partials/components/_base.scss.
////////////////////////////////////////////////////////////////////////////////

html,
body {
  font-size: ($global-font-size * $breakpoint-decrease);
  box-sizing: border-box;

  @include breakpoint($small) {
    font-size: $global-font-size;
  }
}

// Set box-sizing globally to handle padding and border widths
*,
*:before,
*:after {
  box-sizing: inherit;
}

// Default body styles
body {
  padding: 0;
  margin: 0;
  font-family: $body-font-family;
  font-weight: $global-weight-normal;
  line-height: $global-lineheight;
  color: $body-font-color;
  background: $body-background;

  @if ($body-antialiased) {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
}

img {
  // Grid defaults to get images and embeds to work properly
  max-width: 100%;
  height: auto;
  -ms-interpolation-mode: bicubic;

  // Get rid of gap under images by making them display: inline-block; by default
  display: inline-block;
  vertical-align: middle;
}

// Make sure textarea takes on height automatically
textarea {
  height: auto;
  min-height: 50px;
  border-radius: $global-radius;
}

// Make select elements are 100% width by default
select {
  width: 100%;
  border-radius: $global-radius;
}

// Reset <button> styles created by most browsers
button {
  -webkit-appearance: none;
  -moz-appearance: none;
  background: transparent;
  padding: 0;
  border: 0;
  border-radius: $global-radius;
  line-height: 1;
}

/// Adds the general styles for tables.
/// @param {Keyword} $stripe [$table-stripe] - Uses kewords even, odd, or none to darken rows of the table. The defualt value is even.
@mixin table($stripe: $table-stripe) {
  margin-bottom: $global-margin;
  border-radius: $global-radius;

  @at-root {
    thead,
    tbody,
    tfoot {
      border: $table-border;
      background-color: $table-background;
    }

    // Caption
    caption {
      font-weight: $global-weight-bold;
      padding: $table-padding;
    }

    // Table head and foot
    thead,
    tfoot {
      background: $table-head-background;
      color: $table-head-font-color;

      // Rows within head and foot
      tr {
        background: transparent;
      }

      // Cells within head and foot
      th,
      td {
        padding: $table-padding;
        font-weight: $global-weight-bold;
        text-align: #{$global-left};
      }
    }

    // Table rows
    tbody {
      tr {
        // If stripe is set to even, darken the even rows.
        @if $stripe == even {
          &:nth-child(even) {
            background-color: $table-striped-background;
          }
        }

        // If stripe is set to odd, darken the odd rows.
        @else if $stripe == odd {
          &:nth-child(odd) {
            background-color: $table-striped-background;
          }
        }
      }

      th,
      td {
        padding: $table-padding;
      }
    }
  }
}

/// Adds the ability to horizontally scroll the table when the content overflows horizontally.
@mixin table-scroll {
  display: block;
  width: 100%;
  overflow-y: scroll;
}

/// Slightly darkens the table rows on hover.
@mixin table-hover {
  tr {
    //Darkens the non-striped table rows on hover.
    &:hover {
      background-color: $table-row-hover;
    }

    //Darkens the even striped table rows.
    @if($table-stripe == even) {
      &:nth-of-type(even):hover {
        background-color: $table-row-stripe-hover;
      }
    }

    //Darkens the odd striped table rows.
    @elseif($table-stripe == odd) {
      &:nth-of-type(odd):hover {
        background-color: $table-row-stripe-hover;
      }
    }
  }
}

/// Adds styles for a stacked table. Useful for small-screen layouts.
/// @param {Boolean} $header [$show-header-for-stacked] - Show the first th of header when stacked.
@mixin table-stack($header: $show-header-for-stacked) {
  @if $header {
    thead {
      th:first-child {
        display: block;
      }

      th {
        display: none;
      }
    }
  } @else {
    thead {
      display: none;
    }
  }

  tfoot {
    display: none;
  }

  tr,
  th,
  td {
    display: block;
  }

  td {
    border-top: 0;
  }
}

table {
  @include table;
}

table.stack {
  @include breakpoint($medium-down) {
    @include table-stack;
  }
}

table.scroll {
  @include table-scroll;
}

table.hover {
  @include table-hover;
}

@import 'forms';
@import 'typography';
